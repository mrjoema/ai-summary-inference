// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/search.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Common messages
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{0}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Service       string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Search messages
type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	SafeSearch    bool                   `protobuf:"varint,2,opt,name=safe_search,json=safeSearch,proto3" json:"safe_search,omitempty"`
	NumResults    int32                  `protobuf:"varint,3,opt,name=num_results,json=numResults,proto3" json:"num_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_proto_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{2}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetSafeSearch() bool {
	if x != nil {
		return x.SafeSearch
	}
	return false
}

func (x *SearchRequest) GetNumResults() int32 {
	if x != nil {
		return x.NumResults
	}
	return 0
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*SearchResult        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_proto_search_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{3}
}

func (x *SearchResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SearchResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SearchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Snippet       string                 `protobuf:"bytes,3,opt,name=snippet,proto3" json:"snippet,omitempty"`
	DisplayUrl    string                 `protobuf:"bytes,4,opt,name=display_url,json=displayUrl,proto3" json:"display_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_proto_search_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{4}
}

func (x *SearchResult) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchResult) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SearchResult) GetSnippet() string {
	if x != nil {
		return x.Snippet
	}
	return ""
}

func (x *SearchResult) GetDisplayUrl() string {
	if x != nil {
		return x.DisplayUrl
	}
	return ""
}

// Enterprise Tokenizer messages
type TokenizeRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Text                 string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	ModelName            string                 `protobuf:"bytes,2,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`  // e.g., "gpt-4", "llama3.2"
	MaxTokens            int32                  `protobuf:"varint,3,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"` // truncation limit
	IncludeSpecialTokens bool                   `protobuf:"varint,4,opt,name=include_special_tokens,json=includeSpecialTokens,proto3" json:"include_special_tokens,omitempty"`
	RequestId            string                 `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // for tracking/caching
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TokenizeRequest) Reset() {
	*x = TokenizeRequest{}
	mi := &file_proto_search_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizeRequest) ProtoMessage() {}

func (x *TokenizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizeRequest.ProtoReflect.Descriptor instead.
func (*TokenizeRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{5}
}

func (x *TokenizeRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TokenizeRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *TokenizeRequest) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *TokenizeRequest) GetIncludeSpecialTokens() bool {
	if x != nil {
		return x.IncludeSpecialTokens
	}
	return false
}

func (x *TokenizeRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type TokenizeResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TokenIds         []int32                `protobuf:"varint,1,rep,packed,name=token_ids,json=tokenIds,proto3" json:"token_ids,omitempty"`
	TokenStrings     []string               `protobuf:"bytes,2,rep,name=token_strings,json=tokenStrings,proto3" json:"token_strings,omitempty"` // human-readable tokens
	TokenCount       int32                  `protobuf:"varint,3,opt,name=token_count,json=tokenCount,proto3" json:"token_count,omitempty"`
	TruncatedText    string                 `protobuf:"bytes,4,opt,name=truncated_text,json=truncatedText,proto3" json:"truncated_text,omitempty"` // if truncation occurred
	WasTruncated     bool                   `protobuf:"varint,5,opt,name=was_truncated,json=wasTruncated,proto3" json:"was_truncated,omitempty"`
	ModelUsed        string                 `protobuf:"bytes,6,opt,name=model_used,json=modelUsed,proto3" json:"model_used,omitempty"`
	ProcessingTimeMs float32                `protobuf:"fixed32,7,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"` // performance metrics
	CacheStatus      string                 `protobuf:"bytes,8,opt,name=cache_status,json=cacheStatus,proto3" json:"cache_status,omitempty"`                    // "hit", "miss", "bypassed"
	Success          bool                   `protobuf:"varint,9,opt,name=success,proto3" json:"success,omitempty"`
	Error            string                 `protobuf:"bytes,10,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TokenizeResponse) Reset() {
	*x = TokenizeResponse{}
	mi := &file_proto_search_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizeResponse) ProtoMessage() {}

func (x *TokenizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizeResponse.ProtoReflect.Descriptor instead.
func (*TokenizeResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{6}
}

func (x *TokenizeResponse) GetTokenIds() []int32 {
	if x != nil {
		return x.TokenIds
	}
	return nil
}

func (x *TokenizeResponse) GetTokenStrings() []string {
	if x != nil {
		return x.TokenStrings
	}
	return nil
}

func (x *TokenizeResponse) GetTokenCount() int32 {
	if x != nil {
		return x.TokenCount
	}
	return 0
}

func (x *TokenizeResponse) GetTruncatedText() string {
	if x != nil {
		return x.TruncatedText
	}
	return ""
}

func (x *TokenizeResponse) GetWasTruncated() bool {
	if x != nil {
		return x.WasTruncated
	}
	return false
}

func (x *TokenizeResponse) GetModelUsed() string {
	if x != nil {
		return x.ModelUsed
	}
	return ""
}

func (x *TokenizeResponse) GetProcessingTimeMs() float32 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

func (x *TokenizeResponse) GetCacheStatus() string {
	if x != nil {
		return x.CacheStatus
	}
	return ""
}

func (x *TokenizeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TokenizeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type BatchTokenizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*TokenizeRequest     `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	BatchSize     int32                  `protobuf:"varint,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchTokenizeRequest) Reset() {
	*x = BatchTokenizeRequest{}
	mi := &file_proto_search_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchTokenizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchTokenizeRequest) ProtoMessage() {}

func (x *BatchTokenizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchTokenizeRequest.ProtoReflect.Descriptor instead.
func (*BatchTokenizeRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{7}
}

func (x *BatchTokenizeRequest) GetRequests() []*TokenizeRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *BatchTokenizeRequest) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

type BatchTokenizeResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Responses             []*TokenizeResponse    `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	TotalProcessingTimeMs float32                `protobuf:"fixed32,2,opt,name=total_processing_time_ms,json=totalProcessingTimeMs,proto3" json:"total_processing_time_ms,omitempty"`
	CacheHits             int32                  `protobuf:"varint,3,opt,name=cache_hits,json=cacheHits,proto3" json:"cache_hits,omitempty"`
	CacheMisses           int32                  `protobuf:"varint,4,opt,name=cache_misses,json=cacheMisses,proto3" json:"cache_misses,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BatchTokenizeResponse) Reset() {
	*x = BatchTokenizeResponse{}
	mi := &file_proto_search_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchTokenizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchTokenizeResponse) ProtoMessage() {}

func (x *BatchTokenizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchTokenizeResponse.ProtoReflect.Descriptor instead.
func (*BatchTokenizeResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{8}
}

func (x *BatchTokenizeResponse) GetResponses() []*TokenizeResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *BatchTokenizeResponse) GetTotalProcessingTimeMs() float32 {
	if x != nil {
		return x.TotalProcessingTimeMs
	}
	return 0
}

func (x *BatchTokenizeResponse) GetCacheHits() int32 {
	if x != nil {
		return x.CacheHits
	}
	return 0
}

func (x *BatchTokenizeResponse) GetCacheMisses() int32 {
	if x != nil {
		return x.CacheMisses
	}
	return 0
}

type VocabularyInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelName     string                 `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyInfoRequest) Reset() {
	*x = VocabularyInfoRequest{}
	mi := &file_proto_search_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyInfoRequest) ProtoMessage() {}

func (x *VocabularyInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyInfoRequest.ProtoReflect.Descriptor instead.
func (*VocabularyInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{9}
}

func (x *VocabularyInfoRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

type VocabularyInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VocabSize     int32                  `protobuf:"varint,1,opt,name=vocab_size,json=vocabSize,proto3" json:"vocab_size,omitempty"`
	SpecialTokens []string               `protobuf:"bytes,2,rep,name=special_tokens,json=specialTokens,proto3" json:"special_tokens,omitempty"`
	EncodingName  string                 `protobuf:"bytes,3,opt,name=encoding_name,json=encodingName,proto3" json:"encoding_name,omitempty"` // e.g., "cl100k_base"
	ModelName     string                 `protobuf:"bytes,4,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyInfoResponse) Reset() {
	*x = VocabularyInfoResponse{}
	mi := &file_proto_search_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyInfoResponse) ProtoMessage() {}

func (x *VocabularyInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyInfoResponse.ProtoReflect.Descriptor instead.
func (*VocabularyInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{10}
}

func (x *VocabularyInfoResponse) GetVocabSize() int32 {
	if x != nil {
		return x.VocabSize
	}
	return 0
}

func (x *VocabularyInfoResponse) GetSpecialTokens() []string {
	if x != nil {
		return x.SpecialTokens
	}
	return nil
}

func (x *VocabularyInfoResponse) GetEncodingName() string {
	if x != nil {
		return x.EncodingName
	}
	return ""
}

func (x *VocabularyInfoResponse) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

// Detokenization messages (industry standard: token IDs -> text)
type DetokenizeRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TokenIds          []int32                `protobuf:"varint,1,rep,packed,name=token_ids,json=tokenIds,proto3" json:"token_ids,omitempty"`
	ModelName         string                 `protobuf:"bytes,2,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`                            // must match tokenization model
	SkipSpecialTokens bool                   `protobuf:"varint,3,opt,name=skip_special_tokens,json=skipSpecialTokens,proto3" json:"skip_special_tokens,omitempty"` // remove <s>, </s>, etc.
	RequestId         string                 `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                            // for tracking/caching
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DetokenizeRequest) Reset() {
	*x = DetokenizeRequest{}
	mi := &file_proto_search_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetokenizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetokenizeRequest) ProtoMessage() {}

func (x *DetokenizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetokenizeRequest.ProtoReflect.Descriptor instead.
func (*DetokenizeRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{11}
}

func (x *DetokenizeRequest) GetTokenIds() []int32 {
	if x != nil {
		return x.TokenIds
	}
	return nil
}

func (x *DetokenizeRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *DetokenizeRequest) GetSkipSpecialTokens() bool {
	if x != nil {
		return x.SkipSpecialTokens
	}
	return false
}

func (x *DetokenizeRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type DetokenizeResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Text             string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`                                // reconstructed text
	TokenCount       int32                  `protobuf:"varint,2,opt,name=token_count,json=tokenCount,proto3" json:"token_count,omitempty"` // number of tokens processed
	ModelUsed        string                 `protobuf:"bytes,3,opt,name=model_used,json=modelUsed,proto3" json:"model_used,omitempty"`
	ProcessingTimeMs float32                `protobuf:"fixed32,4,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"` // performance metrics
	CacheStatus      string                 `protobuf:"bytes,5,opt,name=cache_status,json=cacheStatus,proto3" json:"cache_status,omitempty"`                    // "hit", "miss", "bypassed"
	Success          bool                   `protobuf:"varint,6,opt,name=success,proto3" json:"success,omitempty"`
	Error            string                 `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DetokenizeResponse) Reset() {
	*x = DetokenizeResponse{}
	mi := &file_proto_search_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetokenizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetokenizeResponse) ProtoMessage() {}

func (x *DetokenizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetokenizeResponse.ProtoReflect.Descriptor instead.
func (*DetokenizeResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{12}
}

func (x *DetokenizeResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DetokenizeResponse) GetTokenCount() int32 {
	if x != nil {
		return x.TokenCount
	}
	return 0
}

func (x *DetokenizeResponse) GetModelUsed() string {
	if x != nil {
		return x.ModelUsed
	}
	return ""
}

func (x *DetokenizeResponse) GetProcessingTimeMs() float32 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

func (x *DetokenizeResponse) GetCacheStatus() string {
	if x != nil {
		return x.CacheStatus
	}
	return ""
}

func (x *DetokenizeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DetokenizeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type BatchDetokenizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*DetokenizeRequest   `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	BatchSize     int32                  `protobuf:"varint,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDetokenizeRequest) Reset() {
	*x = BatchDetokenizeRequest{}
	mi := &file_proto_search_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDetokenizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDetokenizeRequest) ProtoMessage() {}

func (x *BatchDetokenizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDetokenizeRequest.ProtoReflect.Descriptor instead.
func (*BatchDetokenizeRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{13}
}

func (x *BatchDetokenizeRequest) GetRequests() []*DetokenizeRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *BatchDetokenizeRequest) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

type BatchDetokenizeResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Responses             []*DetokenizeResponse  `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	TotalProcessingTimeMs float32                `protobuf:"fixed32,2,opt,name=total_processing_time_ms,json=totalProcessingTimeMs,proto3" json:"total_processing_time_ms,omitempty"`
	CacheHits             int32                  `protobuf:"varint,3,opt,name=cache_hits,json=cacheHits,proto3" json:"cache_hits,omitempty"`
	CacheMisses           int32                  `protobuf:"varint,4,opt,name=cache_misses,json=cacheMisses,proto3" json:"cache_misses,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BatchDetokenizeResponse) Reset() {
	*x = BatchDetokenizeResponse{}
	mi := &file_proto_search_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDetokenizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDetokenizeResponse) ProtoMessage() {}

func (x *BatchDetokenizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDetokenizeResponse.ProtoReflect.Descriptor instead.
func (*BatchDetokenizeResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{14}
}

func (x *BatchDetokenizeResponse) GetResponses() []*DetokenizeResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *BatchDetokenizeResponse) GetTotalProcessingTimeMs() float32 {
	if x != nil {
		return x.TotalProcessingTimeMs
	}
	return 0
}

func (x *BatchDetokenizeResponse) GetCacheHits() int32 {
	if x != nil {
		return x.CacheHits
	}
	return 0
}

func (x *BatchDetokenizeResponse) GetCacheMisses() int32 {
	if x != nil {
		return x.CacheMisses
	}
	return 0
}

// Enhanced Inference messages (Industry Standard)
type SummarizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenIds      []int32                `protobuf:"varint,1,rep,packed,name=token_ids,json=tokenIds,proto3" json:"token_ids,omitempty"` // PRIMARY: from tokenizer service
	ModelName     string                 `protobuf:"bytes,2,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`      // which model/tokenizer was used
	Streaming     bool                   `protobuf:"varint,3,opt,name=streaming,proto3" json:"streaming,omitempty"`
	MaxLength     int32                  `protobuf:"varint,4,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	RequestId     string                 `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`          // for correlation
	OriginalText  string                 `protobuf:"bytes,6,opt,name=original_text,json=originalText,proto3" json:"original_text,omitempty"` // FALLBACK ONLY: for non-tokenized requests
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizeRequest) Reset() {
	*x = SummarizeRequest{}
	mi := &file_proto_search_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeRequest) ProtoMessage() {}

func (x *SummarizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeRequest.ProtoReflect.Descriptor instead.
func (*SummarizeRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{15}
}

func (x *SummarizeRequest) GetTokenIds() []int32 {
	if x != nil {
		return x.TokenIds
	}
	return nil
}

func (x *SummarizeRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *SummarizeRequest) GetStreaming() bool {
	if x != nil {
		return x.Streaming
	}
	return false
}

func (x *SummarizeRequest) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *SummarizeRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SummarizeRequest) GetOriginalText() string {
	if x != nil {
		return x.OriginalText
	}
	return ""
}

type SummarizeResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Summary           string                 `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	Success           bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error             string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	TokensUsed        int32                  `protobuf:"varint,4,opt,name=tokens_used,json=tokensUsed,proto3" json:"tokens_used,omitempty"`
	Confidence        float32                `protobuf:"fixed32,5,opt,name=confidence,proto3" json:"confidence,omitempty"`
	GeneratedTokenIds []int32                `protobuf:"varint,6,rep,packed,name=generated_token_ids,json=generatedTokenIds,proto3" json:"generated_token_ids,omitempty"` // TOKEN-NATIVE: Generated tokens for detokenization
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SummarizeResponse) Reset() {
	*x = SummarizeResponse{}
	mi := &file_proto_search_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeResponse) ProtoMessage() {}

func (x *SummarizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeResponse.ProtoReflect.Descriptor instead.
func (*SummarizeResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{16}
}

func (x *SummarizeResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *SummarizeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SummarizeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SummarizeResponse) GetTokensUsed() int32 {
	if x != nil {
		return x.TokensUsed
	}
	return 0
}

func (x *SummarizeResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *SummarizeResponse) GetGeneratedTokenIds() []int32 {
	if x != nil {
		return x.GeneratedTokenIds
	}
	return nil
}

type SummarizeStreamResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Token            string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	IsFinal          bool                   `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	Error            string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Position         int32                  `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	GeneratedTokenId int32                  `protobuf:"varint,5,opt,name=generated_token_id,json=generatedTokenId,proto3" json:"generated_token_id,omitempty"` // TOKEN-NATIVE: Token ID for streaming detokenization
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SummarizeStreamResponse) Reset() {
	*x = SummarizeStreamResponse{}
	mi := &file_proto_search_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeStreamResponse) ProtoMessage() {}

func (x *SummarizeStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeStreamResponse.ProtoReflect.Descriptor instead.
func (*SummarizeStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{17}
}

func (x *SummarizeStreamResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SummarizeStreamResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *SummarizeStreamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SummarizeStreamResponse) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *SummarizeStreamResponse) GetGeneratedTokenId() int32 {
	if x != nil {
		return x.GeneratedTokenId
	}
	return 0
}

// Safety messages
type ValidateInputRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	ClientIp      string                 `protobuf:"bytes,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	SafeSearch    bool                   `protobuf:"varint,3,opt,name=safe_search,json=safeSearch,proto3" json:"safe_search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateInputRequest) Reset() {
	*x = ValidateInputRequest{}
	mi := &file_proto_search_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateInputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateInputRequest) ProtoMessage() {}

func (x *ValidateInputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateInputRequest.ProtoReflect.Descriptor instead.
func (*ValidateInputRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{18}
}

func (x *ValidateInputRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ValidateInputRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *ValidateInputRequest) GetSafeSearch() bool {
	if x != nil {
		return x.SafeSearch
	}
	return false
}

type ValidateInputResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSafe        bool                   `protobuf:"varint,1,opt,name=is_safe,json=isSafe,proto3" json:"is_safe,omitempty"`
	SanitizedText string                 `protobuf:"bytes,2,opt,name=sanitized_text,json=sanitizedText,proto3" json:"sanitized_text,omitempty"`
	Warnings      []string               `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateInputResponse) Reset() {
	*x = ValidateInputResponse{}
	mi := &file_proto_search_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateInputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateInputResponse) ProtoMessage() {}

func (x *ValidateInputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateInputResponse.ProtoReflect.Descriptor instead.
func (*ValidateInputResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{19}
}

func (x *ValidateInputResponse) GetIsSafe() bool {
	if x != nil {
		return x.IsSafe
	}
	return false
}

func (x *ValidateInputResponse) GetSanitizedText() string {
	if x != nil {
		return x.SanitizedText
	}
	return ""
}

func (x *ValidateInputResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *ValidateInputResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SanitizeOutputRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SanitizeOutputRequest) Reset() {
	*x = SanitizeOutputRequest{}
	mi := &file_proto_search_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SanitizeOutputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizeOutputRequest) ProtoMessage() {}

func (x *SanitizeOutputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizeOutputRequest.ProtoReflect.Descriptor instead.
func (*SanitizeOutputRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{20}
}

func (x *SanitizeOutputRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SanitizeOutputResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SanitizedText string                 `protobuf:"bytes,1,opt,name=sanitized_text,json=sanitizedText,proto3" json:"sanitized_text,omitempty"`
	Warnings      []string               `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SanitizeOutputResponse) Reset() {
	*x = SanitizeOutputResponse{}
	mi := &file_proto_search_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SanitizeOutputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizeOutputResponse) ProtoMessage() {}

func (x *SanitizeOutputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizeOutputResponse.ProtoReflect.Descriptor instead.
func (*SanitizeOutputResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{21}
}

func (x *SanitizeOutputResponse) GetSanitizedText() string {
	if x != nil {
		return x.SanitizedText
	}
	return ""
}

func (x *SanitizeOutputResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *SanitizeOutputResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// LLM Orchestrator messages
type LLMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	MaxTokens     int32                  `protobuf:"varint,3,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	Stream        bool                   `protobuf:"varint,4,opt,name=stream,proto3" json:"stream,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LLMRequest) Reset() {
	*x = LLMRequest{}
	mi := &file_proto_search_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMRequest) ProtoMessage() {}

func (x *LLMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMRequest.ProtoReflect.Descriptor instead.
func (*LLMRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{22}
}

func (x *LLMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LLMRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *LLMRequest) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *LLMRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *LLMRequest) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type LLMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tokens        []string               `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
	Summary       string                 `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Complete      bool                   `protobuf:"varint,5,opt,name=complete,proto3" json:"complete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LLMResponse) Reset() {
	*x = LLMResponse{}
	mi := &file_proto_search_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMResponse) ProtoMessage() {}

func (x *LLMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMResponse.ProtoReflect.Descriptor instead.
func (*LLMResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{23}
}

func (x *LLMResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LLMResponse) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *LLMResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *LLMResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *LLMResponse) GetComplete() bool {
	if x != nil {
		return x.Complete
	}
	return false
}

type LLMStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LLMStatusRequest) Reset() {
	*x = LLMStatusRequest{}
	mi := &file_proto_search_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMStatusRequest) ProtoMessage() {}

func (x *LLMStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMStatusRequest.ProtoReflect.Descriptor instead.
func (*LLMStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{24}
}

func (x *LLMStatusRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type LLMStatusResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RequestId         string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status            string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // pending, processing, completed, failed
	QueuePosition     int32                  `protobuf:"varint,3,opt,name=queue_position,json=queuePosition,proto3" json:"queue_position,omitempty"`
	EstimatedWaitTime int32                  `protobuf:"varint,4,opt,name=estimated_wait_time,json=estimatedWaitTime,proto3" json:"estimated_wait_time,omitempty"` // seconds
	Error             string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LLMStatusResponse) Reset() {
	*x = LLMStatusResponse{}
	mi := &file_proto_search_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMStatusResponse) ProtoMessage() {}

func (x *LLMStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMStatusResponse.ProtoReflect.Descriptor instead.
func (*LLMStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{25}
}

func (x *LLMStatusResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *LLMStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LLMStatusResponse) GetQueuePosition() int32 {
	if x != nil {
		return x.QueuePosition
	}
	return 0
}

func (x *LLMStatusResponse) GetEstimatedWaitTime() int32 {
	if x != nil {
		return x.EstimatedWaitTime
	}
	return 0
}

func (x *LLMStatusResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LLMStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	IsFinal       bool                   `protobuf:"varint,3,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Position      int32                  `protobuf:"varint,5,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LLMStreamResponse) Reset() {
	*x = LLMStreamResponse{}
	mi := &file_proto_search_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMStreamResponse) ProtoMessage() {}

func (x *LLMStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMStreamResponse.ProtoReflect.Descriptor instead.
func (*LLMStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{26}
}

func (x *LLMStreamResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LLMStreamResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LLMStreamResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *LLMStreamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *LLMStreamResponse) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

var File_proto_search_proto protoreflect.FileDescriptor

const file_proto_search_proto_rawDesc = "" +
	"\n" +
	"\x12proto/search.proto\x12\x06search\"\x14\n" +
	"\x12HealthCheckRequest\"e\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"g\n" +
	"\rSearchRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x1f\n" +
	"\vsafe_search\x18\x02 \x01(\bR\n" +
	"safeSearch\x12\x1f\n" +
	"\vnum_results\x18\x03 \x01(\x05R\n" +
	"numResults\"\x86\x01\n" +
	"\x0eSearchResponse\x12.\n" +
	"\aresults\x18\x01 \x03(\v2\x14.search.SearchResultR\aresults\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"q\n" +
	"\fSearchResult\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x18\n" +
	"\asnippet\x18\x03 \x01(\tR\asnippet\x12\x1f\n" +
	"\vdisplay_url\x18\x04 \x01(\tR\n" +
	"displayUrl\"\xb8\x01\n" +
	"\x0fTokenizeRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x1d\n" +
	"\n" +
	"model_name\x18\x02 \x01(\tR\tmodelName\x12\x1d\n" +
	"\n" +
	"max_tokens\x18\x03 \x01(\x05R\tmaxTokens\x124\n" +
	"\x16include_special_tokens\x18\x04 \x01(\bR\x14includeSpecialTokens\x12\x1d\n" +
	"\n" +
	"request_id\x18\x05 \x01(\tR\trequestId\"\xe1\x02\n" +
	"\x10TokenizeResponse\x12\x1b\n" +
	"\ttoken_ids\x18\x01 \x03(\x05R\btokenIds\x12#\n" +
	"\rtoken_strings\x18\x02 \x03(\tR\ftokenStrings\x12\x1f\n" +
	"\vtoken_count\x18\x03 \x01(\x05R\n" +
	"tokenCount\x12%\n" +
	"\x0etruncated_text\x18\x04 \x01(\tR\rtruncatedText\x12#\n" +
	"\rwas_truncated\x18\x05 \x01(\bR\fwasTruncated\x12\x1d\n" +
	"\n" +
	"model_used\x18\x06 \x01(\tR\tmodelUsed\x12,\n" +
	"\x12processing_time_ms\x18\a \x01(\x02R\x10processingTimeMs\x12!\n" +
	"\fcache_status\x18\b \x01(\tR\vcacheStatus\x12\x18\n" +
	"\asuccess\x18\t \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\n" +
	" \x01(\tR\x05error\"j\n" +
	"\x14BatchTokenizeRequest\x123\n" +
	"\brequests\x18\x01 \x03(\v2\x17.search.TokenizeRequestR\brequests\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x02 \x01(\x05R\tbatchSize\"\xca\x01\n" +
	"\x15BatchTokenizeResponse\x126\n" +
	"\tresponses\x18\x01 \x03(\v2\x18.search.TokenizeResponseR\tresponses\x127\n" +
	"\x18total_processing_time_ms\x18\x02 \x01(\x02R\x15totalProcessingTimeMs\x12\x1d\n" +
	"\n" +
	"cache_hits\x18\x03 \x01(\x05R\tcacheHits\x12!\n" +
	"\fcache_misses\x18\x04 \x01(\x05R\vcacheMisses\"6\n" +
	"\x15VocabularyInfoRequest\x12\x1d\n" +
	"\n" +
	"model_name\x18\x01 \x01(\tR\tmodelName\"\xa2\x01\n" +
	"\x16VocabularyInfoResponse\x12\x1d\n" +
	"\n" +
	"vocab_size\x18\x01 \x01(\x05R\tvocabSize\x12%\n" +
	"\x0especial_tokens\x18\x02 \x03(\tR\rspecialTokens\x12#\n" +
	"\rencoding_name\x18\x03 \x01(\tR\fencodingName\x12\x1d\n" +
	"\n" +
	"model_name\x18\x04 \x01(\tR\tmodelName\"\x9e\x01\n" +
	"\x11DetokenizeRequest\x12\x1b\n" +
	"\ttoken_ids\x18\x01 \x03(\x05R\btokenIds\x12\x1d\n" +
	"\n" +
	"model_name\x18\x02 \x01(\tR\tmodelName\x12.\n" +
	"\x13skip_special_tokens\x18\x03 \x01(\bR\x11skipSpecialTokens\x12\x1d\n" +
	"\n" +
	"request_id\x18\x04 \x01(\tR\trequestId\"\xe9\x01\n" +
	"\x12DetokenizeResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x1f\n" +
	"\vtoken_count\x18\x02 \x01(\x05R\n" +
	"tokenCount\x12\x1d\n" +
	"\n" +
	"model_used\x18\x03 \x01(\tR\tmodelUsed\x12,\n" +
	"\x12processing_time_ms\x18\x04 \x01(\x02R\x10processingTimeMs\x12!\n" +
	"\fcache_status\x18\x05 \x01(\tR\vcacheStatus\x12\x18\n" +
	"\asuccess\x18\x06 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\a \x01(\tR\x05error\"n\n" +
	"\x16BatchDetokenizeRequest\x125\n" +
	"\brequests\x18\x01 \x03(\v2\x19.search.DetokenizeRequestR\brequests\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x02 \x01(\x05R\tbatchSize\"\xce\x01\n" +
	"\x17BatchDetokenizeResponse\x128\n" +
	"\tresponses\x18\x01 \x03(\v2\x1a.search.DetokenizeResponseR\tresponses\x127\n" +
	"\x18total_processing_time_ms\x18\x02 \x01(\x02R\x15totalProcessingTimeMs\x12\x1d\n" +
	"\n" +
	"cache_hits\x18\x03 \x01(\x05R\tcacheHits\x12!\n" +
	"\fcache_misses\x18\x04 \x01(\x05R\vcacheMisses\"\xcf\x01\n" +
	"\x10SummarizeRequest\x12\x1b\n" +
	"\ttoken_ids\x18\x01 \x03(\x05R\btokenIds\x12\x1d\n" +
	"\n" +
	"model_name\x18\x02 \x01(\tR\tmodelName\x12\x1c\n" +
	"\tstreaming\x18\x03 \x01(\bR\tstreaming\x12\x1d\n" +
	"\n" +
	"max_length\x18\x04 \x01(\x05R\tmaxLength\x12\x1d\n" +
	"\n" +
	"request_id\x18\x05 \x01(\tR\trequestId\x12#\n" +
	"\roriginal_text\x18\x06 \x01(\tR\foriginalText\"\xce\x01\n" +
	"\x11SummarizeResponse\x12\x18\n" +
	"\asummary\x18\x01 \x01(\tR\asummary\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x1f\n" +
	"\vtokens_used\x18\x04 \x01(\x05R\n" +
	"tokensUsed\x12\x1e\n" +
	"\n" +
	"confidence\x18\x05 \x01(\x02R\n" +
	"confidence\x12.\n" +
	"\x13generated_token_ids\x18\x06 \x03(\x05R\x11generatedTokenIds\"\xaa\x01\n" +
	"\x17SummarizeStreamResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\x19\n" +
	"\bis_final\x18\x02 \x01(\bR\aisFinal\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x1a\n" +
	"\bposition\x18\x04 \x01(\x05R\bposition\x12,\n" +
	"\x12generated_token_id\x18\x05 \x01(\x05R\x10generatedTokenId\"h\n" +
	"\x14ValidateInputRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x1b\n" +
	"\tclient_ip\x18\x02 \x01(\tR\bclientIp\x12\x1f\n" +
	"\vsafe_search\x18\x03 \x01(\bR\n" +
	"safeSearch\"\x89\x01\n" +
	"\x15ValidateInputResponse\x12\x17\n" +
	"\ais_safe\x18\x01 \x01(\bR\x06isSafe\x12%\n" +
	"\x0esanitized_text\x18\x02 \x01(\tR\rsanitizedText\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"+\n" +
	"\x15SanitizeOutputRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"q\n" +
	"\x16SanitizeOutputResponse\x12%\n" +
	"\x0esanitized_text\x18\x01 \x01(\tR\rsanitizedText\x12\x1a\n" +
	"\bwarnings\x18\x02 \x03(\tR\bwarnings\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\x86\x01\n" +
	"\n" +
	"LLMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x1d\n" +
	"\n" +
	"max_tokens\x18\x03 \x01(\x05R\tmaxTokens\x12\x16\n" +
	"\x06stream\x18\x04 \x01(\bR\x06stream\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\"\x81\x01\n" +
	"\vLLMResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06tokens\x18\x02 \x03(\tR\x06tokens\x12\x18\n" +
	"\asummary\x18\x03 \x01(\tR\asummary\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\x12\x1a\n" +
	"\bcomplete\x18\x05 \x01(\bR\bcomplete\"1\n" +
	"\x10LLMStatusRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\"\xb7\x01\n" +
	"\x11LLMStatusResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12%\n" +
	"\x0equeue_position\x18\x03 \x01(\x05R\rqueuePosition\x12.\n" +
	"\x13estimated_wait_time\x18\x04 \x01(\x05R\x11estimatedWaitTime\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\"\x86\x01\n" +
	"\x11LLMStreamResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x19\n" +
	"\bis_final\x18\x03 \x01(\bR\aisFinal\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\x12\x1a\n" +
	"\bposition\x18\x05 \x01(\x05R\bposition2\x90\x01\n" +
	"\rSearchService\x127\n" +
	"\x06Search\x12\x15.search.SearchRequest\x1a\x16.search.SearchResponse\x12F\n" +
	"\vHealthCheck\x12\x1a.search.HealthCheckRequest\x1a\x1b.search.HealthCheckResponse2\xd4\x03\n" +
	"\x10TokenizerService\x12=\n" +
	"\bTokenize\x12\x17.search.TokenizeRequest\x1a\x18.search.TokenizeResponse\x12L\n" +
	"\rBatchTokenize\x12\x1c.search.BatchTokenizeRequest\x1a\x1d.search.BatchTokenizeResponse\x12R\n" +
	"\x11GetVocabularyInfo\x12\x1d.search.VocabularyInfoRequest\x1a\x1e.search.VocabularyInfoResponse\x12C\n" +
	"\n" +
	"Detokenize\x12\x19.search.DetokenizeRequest\x1a\x1a.search.DetokenizeResponse\x12R\n" +
	"\x0fBatchDetokenize\x12\x1e.search.BatchDetokenizeRequest\x1a\x1f.search.BatchDetokenizeResponse\x12F\n" +
	"\vHealthCheck\x12\x1a.search.HealthCheckRequest\x1a\x1b.search.HealthCheckResponse2\xec\x01\n" +
	"\x10InferenceService\x12@\n" +
	"\tSummarize\x12\x18.search.SummarizeRequest\x1a\x19.search.SummarizeResponse\x12N\n" +
	"\x0fSummarizeStream\x12\x18.search.SummarizeRequest\x1a\x1f.search.SummarizeStreamResponse0\x01\x12F\n" +
	"\vHealthCheck\x12\x1a.search.HealthCheckRequest\x1a\x1b.search.HealthCheckResponse2\xf6\x01\n" +
	"\rSafetyService\x12L\n" +
	"\rValidateInput\x12\x1c.search.ValidateInputRequest\x1a\x1d.search.ValidateInputResponse\x12O\n" +
	"\x0eSanitizeOutput\x12\x1d.search.SanitizeOutputRequest\x1a\x1e.search.SanitizeOutputResponse\x12F\n" +
	"\vHealthCheck\x12\x1a.search.HealthCheckRequest\x1a\x1b.search.HealthCheckResponse2\x9f\x02\n" +
	"\x16LLMOrchestratorService\x129\n" +
	"\x0eProcessRequest\x12\x12.search.LLMRequest\x1a\x13.search.LLMResponse\x12@\n" +
	"\rStreamRequest\x12\x12.search.LLMRequest\x1a\x19.search.LLMStreamResponse0\x01\x12@\n" +
	"\tGetStatus\x12\x18.search.LLMStatusRequest\x1a\x19.search.LLMStatusResponse\x12F\n" +
	"\vHealthCheck\x12\x1a.search.HealthCheckRequest\x1a\x1b.search.HealthCheckResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_search_proto_rawDescOnce sync.Once
	file_proto_search_proto_rawDescData []byte
)

func file_proto_search_proto_rawDescGZIP() []byte {
	file_proto_search_proto_rawDescOnce.Do(func() {
		file_proto_search_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_search_proto_rawDesc), len(file_proto_search_proto_rawDesc)))
	})
	return file_proto_search_proto_rawDescData
}

var file_proto_search_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_proto_search_proto_goTypes = []any{
	(*HealthCheckRequest)(nil),      // 0: search.HealthCheckRequest
	(*HealthCheckResponse)(nil),     // 1: search.HealthCheckResponse
	(*SearchRequest)(nil),           // 2: search.SearchRequest
	(*SearchResponse)(nil),          // 3: search.SearchResponse
	(*SearchResult)(nil),            // 4: search.SearchResult
	(*TokenizeRequest)(nil),         // 5: search.TokenizeRequest
	(*TokenizeResponse)(nil),        // 6: search.TokenizeResponse
	(*BatchTokenizeRequest)(nil),    // 7: search.BatchTokenizeRequest
	(*BatchTokenizeResponse)(nil),   // 8: search.BatchTokenizeResponse
	(*VocabularyInfoRequest)(nil),   // 9: search.VocabularyInfoRequest
	(*VocabularyInfoResponse)(nil),  // 10: search.VocabularyInfoResponse
	(*DetokenizeRequest)(nil),       // 11: search.DetokenizeRequest
	(*DetokenizeResponse)(nil),      // 12: search.DetokenizeResponse
	(*BatchDetokenizeRequest)(nil),  // 13: search.BatchDetokenizeRequest
	(*BatchDetokenizeResponse)(nil), // 14: search.BatchDetokenizeResponse
	(*SummarizeRequest)(nil),        // 15: search.SummarizeRequest
	(*SummarizeResponse)(nil),       // 16: search.SummarizeResponse
	(*SummarizeStreamResponse)(nil), // 17: search.SummarizeStreamResponse
	(*ValidateInputRequest)(nil),    // 18: search.ValidateInputRequest
	(*ValidateInputResponse)(nil),   // 19: search.ValidateInputResponse
	(*SanitizeOutputRequest)(nil),   // 20: search.SanitizeOutputRequest
	(*SanitizeOutputResponse)(nil),  // 21: search.SanitizeOutputResponse
	(*LLMRequest)(nil),              // 22: search.LLMRequest
	(*LLMResponse)(nil),             // 23: search.LLMResponse
	(*LLMStatusRequest)(nil),        // 24: search.LLMStatusRequest
	(*LLMStatusResponse)(nil),       // 25: search.LLMStatusResponse
	(*LLMStreamResponse)(nil),       // 26: search.LLMStreamResponse
}
var file_proto_search_proto_depIdxs = []int32{
	4,  // 0: search.SearchResponse.results:type_name -> search.SearchResult
	5,  // 1: search.BatchTokenizeRequest.requests:type_name -> search.TokenizeRequest
	6,  // 2: search.BatchTokenizeResponse.responses:type_name -> search.TokenizeResponse
	11, // 3: search.BatchDetokenizeRequest.requests:type_name -> search.DetokenizeRequest
	12, // 4: search.BatchDetokenizeResponse.responses:type_name -> search.DetokenizeResponse
	2,  // 5: search.SearchService.Search:input_type -> search.SearchRequest
	0,  // 6: search.SearchService.HealthCheck:input_type -> search.HealthCheckRequest
	5,  // 7: search.TokenizerService.Tokenize:input_type -> search.TokenizeRequest
	7,  // 8: search.TokenizerService.BatchTokenize:input_type -> search.BatchTokenizeRequest
	9,  // 9: search.TokenizerService.GetVocabularyInfo:input_type -> search.VocabularyInfoRequest
	11, // 10: search.TokenizerService.Detokenize:input_type -> search.DetokenizeRequest
	13, // 11: search.TokenizerService.BatchDetokenize:input_type -> search.BatchDetokenizeRequest
	0,  // 12: search.TokenizerService.HealthCheck:input_type -> search.HealthCheckRequest
	15, // 13: search.InferenceService.Summarize:input_type -> search.SummarizeRequest
	15, // 14: search.InferenceService.SummarizeStream:input_type -> search.SummarizeRequest
	0,  // 15: search.InferenceService.HealthCheck:input_type -> search.HealthCheckRequest
	18, // 16: search.SafetyService.ValidateInput:input_type -> search.ValidateInputRequest
	20, // 17: search.SafetyService.SanitizeOutput:input_type -> search.SanitizeOutputRequest
	0,  // 18: search.SafetyService.HealthCheck:input_type -> search.HealthCheckRequest
	22, // 19: search.LLMOrchestratorService.ProcessRequest:input_type -> search.LLMRequest
	22, // 20: search.LLMOrchestratorService.StreamRequest:input_type -> search.LLMRequest
	24, // 21: search.LLMOrchestratorService.GetStatus:input_type -> search.LLMStatusRequest
	0,  // 22: search.LLMOrchestratorService.HealthCheck:input_type -> search.HealthCheckRequest
	3,  // 23: search.SearchService.Search:output_type -> search.SearchResponse
	1,  // 24: search.SearchService.HealthCheck:output_type -> search.HealthCheckResponse
	6,  // 25: search.TokenizerService.Tokenize:output_type -> search.TokenizeResponse
	8,  // 26: search.TokenizerService.BatchTokenize:output_type -> search.BatchTokenizeResponse
	10, // 27: search.TokenizerService.GetVocabularyInfo:output_type -> search.VocabularyInfoResponse
	12, // 28: search.TokenizerService.Detokenize:output_type -> search.DetokenizeResponse
	14, // 29: search.TokenizerService.BatchDetokenize:output_type -> search.BatchDetokenizeResponse
	1,  // 30: search.TokenizerService.HealthCheck:output_type -> search.HealthCheckResponse
	16, // 31: search.InferenceService.Summarize:output_type -> search.SummarizeResponse
	17, // 32: search.InferenceService.SummarizeStream:output_type -> search.SummarizeStreamResponse
	1,  // 33: search.InferenceService.HealthCheck:output_type -> search.HealthCheckResponse
	19, // 34: search.SafetyService.ValidateInput:output_type -> search.ValidateInputResponse
	21, // 35: search.SafetyService.SanitizeOutput:output_type -> search.SanitizeOutputResponse
	1,  // 36: search.SafetyService.HealthCheck:output_type -> search.HealthCheckResponse
	23, // 37: search.LLMOrchestratorService.ProcessRequest:output_type -> search.LLMResponse
	26, // 38: search.LLMOrchestratorService.StreamRequest:output_type -> search.LLMStreamResponse
	25, // 39: search.LLMOrchestratorService.GetStatus:output_type -> search.LLMStatusResponse
	1,  // 40: search.LLMOrchestratorService.HealthCheck:output_type -> search.HealthCheckResponse
	23, // [23:41] is the sub-list for method output_type
	5,  // [5:23] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_search_proto_init() }
func file_proto_search_proto_init() {
	if File_proto_search_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_search_proto_rawDesc), len(file_proto_search_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_proto_search_proto_goTypes,
		DependencyIndexes: file_proto_search_proto_depIdxs,
		MessageInfos:      file_proto_search_proto_msgTypes,
	}.Build()
	File_proto_search_proto = out.File
	file_proto_search_proto_goTypes = nil
	file_proto_search_proto_depIdxs = nil
}
